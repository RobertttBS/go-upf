// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: upfc.proto

package upfc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RpcReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RpcReply) Reset() {
	*x = RpcReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReply) ProtoMessage() {}

func (x *RpcReply) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReply.ProtoReflect.Descriptor instead.
func (*RpcReply) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{2}
}

func (x *RpcReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BufferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action bool   `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"` // 0 -> add, 1 -> release
	FarId  uint32 `protobuf:"varint,2,opt,name=far_id,json=farId,proto3" json:"far_id,omitempty"`
}

func (x *BufferRequest) Reset() {
	*x = BufferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferRequest) ProtoMessage() {}

func (x *BufferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferRequest.ProtoReflect.Descriptor instead.
func (*BufferRequest) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{3}
}

func (x *BufferRequest) GetAction() bool {
	if x != nil {
		return x.Action
	}
	return false
}

func (x *BufferRequest) GetFarId() uint32 {
	if x != nil {
		return x.FarId
	}
	return 0
}

type UplinkPdrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teid  uint32 `protobuf:"varint,1,opt,name=teid,proto3" json:"teid,omitempty"`
	UeIp  uint32 `protobuf:"varint,2,opt,name=ue_ip,json=ueIp,proto3" json:"ue_ip,omitempty"`
	PdrId uint32 `protobuf:"varint,3,opt,name=pdr_id,json=pdrId,proto3" json:"pdr_id,omitempty"`
	FarId uint32 `protobuf:"varint,4,opt,name=far_id,json=farId,proto3" json:"far_id,omitempty"`
	QerId uint32 `protobuf:"varint,5,opt,name=qer_id,json=qerId,proto3" json:"qer_id,omitempty"`
}

func (x *UplinkPdrRequest) Reset() {
	*x = UplinkPdrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UplinkPdrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UplinkPdrRequest) ProtoMessage() {}

func (x *UplinkPdrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UplinkPdrRequest.ProtoReflect.Descriptor instead.
func (*UplinkPdrRequest) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{4}
}

func (x *UplinkPdrRequest) GetTeid() uint32 {
	if x != nil {
		return x.Teid
	}
	return 0
}

func (x *UplinkPdrRequest) GetUeIp() uint32 {
	if x != nil {
		return x.UeIp
	}
	return 0
}

func (x *UplinkPdrRequest) GetPdrId() uint32 {
	if x != nil {
		return x.PdrId
	}
	return 0
}

func (x *UplinkPdrRequest) GetFarId() uint32 {
	if x != nil {
		return x.FarId
	}
	return 0
}

func (x *UplinkPdrRequest) GetQerId() uint32 {
	if x != nil {
		return x.QerId
	}
	return 0
}

type DownlinkPdrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seid  uint64 `protobuf:"varint,1,opt,name=seid,proto3" json:"seid,omitempty"`
	UeIp  uint32 `protobuf:"varint,2,opt,name=ue_ip,json=ueIp,proto3" json:"ue_ip,omitempty"`
	PdrId uint32 `protobuf:"varint,3,opt,name=pdr_id,json=pdrId,proto3" json:"pdr_id,omitempty"`
	FarId uint32 `protobuf:"varint,4,opt,name=far_id,json=farId,proto3" json:"far_id,omitempty"`
	QerId uint32 `protobuf:"varint,5,opt,name=qer_id,json=qerId,proto3" json:"qer_id,omitempty"`
}

func (x *DownlinkPdrRequest) Reset() {
	*x = DownlinkPdrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownlinkPdrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownlinkPdrRequest) ProtoMessage() {}

func (x *DownlinkPdrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownlinkPdrRequest.ProtoReflect.Descriptor instead.
func (*DownlinkPdrRequest) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{5}
}

func (x *DownlinkPdrRequest) GetSeid() uint64 {
	if x != nil {
		return x.Seid
	}
	return 0
}

func (x *DownlinkPdrRequest) GetUeIp() uint32 {
	if x != nil {
		return x.UeIp
	}
	return 0
}

func (x *DownlinkPdrRequest) GetPdrId() uint32 {
	if x != nil {
		return x.PdrId
	}
	return 0
}

func (x *DownlinkPdrRequest) GetFarId() uint32 {
	if x != nil {
		return x.FarId
	}
	return 0
}

func (x *DownlinkPdrRequest) GetQerId() uint32 {
	if x != nil {
		return x.QerId
	}
	return 0
}

type FarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teid          uint32 `protobuf:"varint,1,opt,name=teid,proto3" json:"teid,omitempty"`
	Action        uint32 `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
	FarId         uint32 `protobuf:"varint,3,opt,name=far_id,json=farId,proto3" json:"far_id,omitempty"`
	TunnelSrcAddr uint32 `protobuf:"varint,4,opt,name=tunnel_src_addr,json=tunnelSrcAddr,proto3" json:"tunnel_src_addr,omitempty"`
	TunnelDstAddr uint32 `protobuf:"varint,5,opt,name=tunnel_dst_addr,json=tunnelDstAddr,proto3" json:"tunnel_dst_addr,omitempty"`
}

func (x *FarRequest) Reset() {
	*x = FarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarRequest) ProtoMessage() {}

func (x *FarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarRequest.ProtoReflect.Descriptor instead.
func (*FarRequest) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{6}
}

func (x *FarRequest) GetTeid() uint32 {
	if x != nil {
		return x.Teid
	}
	return 0
}

func (x *FarRequest) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *FarRequest) GetFarId() uint32 {
	if x != nil {
		return x.FarId
	}
	return 0
}

func (x *FarRequest) GetTunnelSrcAddr() uint32 {
	if x != nil {
		return x.TunnelSrcAddr
	}
	return 0
}

func (x *FarRequest) GetTunnelDstAddr() uint32 {
	if x != nil {
		return x.TunnelDstAddr
	}
	return 0
}

type RouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUplink bool   `protobuf:"varint,1,opt,name=is_uplink,json=isUplink,proto3" json:"is_uplink,omitempty"`
	SrcMac   []byte `protobuf:"bytes,2,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac   []byte `protobuf:"bytes,3,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
}

func (x *RouteRequest) Reset() {
	*x = RouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteRequest) ProtoMessage() {}

func (x *RouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteRequest.ProtoReflect.Descriptor instead.
func (*RouteRequest) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{7}
}

func (x *RouteRequest) GetIsUplink() bool {
	if x != nil {
		return x.IsUplink
	}
	return false
}

func (x *RouteRequest) GetSrcMac() []byte {
	if x != nil {
		return x.SrcMac
	}
	return nil
}

func (x *RouteRequest) GetDstMac() []byte {
	if x != nil {
		return x.DstMac
	}
	return nil
}

type QerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QerId uint32 `protobuf:"varint,1,opt,name=qer_id,json=qerId,proto3" json:"qer_id,omitempty"`
	Qfi   uint32 `protobuf:"varint,2,opt,name=qfi,proto3" json:"qfi,omitempty"`
	Cir   uint64 `protobuf:"varint,3,opt,name=cir,proto3" json:"cir,omitempty"`
	Cbs   uint64 `protobuf:"varint,4,opt,name=cbs,proto3" json:"cbs,omitempty"`
	Pir   uint64 `protobuf:"varint,5,opt,name=pir,proto3" json:"pir,omitempty"`
	Pbs   uint64 `protobuf:"varint,6,opt,name=pbs,proto3" json:"pbs,omitempty"`
}

func (x *QerRequest) Reset() {
	*x = QerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QerRequest) ProtoMessage() {}

func (x *QerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QerRequest.ProtoReflect.Descriptor instead.
func (*QerRequest) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{8}
}

func (x *QerRequest) GetQerId() uint32 {
	if x != nil {
		return x.QerId
	}
	return 0
}

func (x *QerRequest) GetQfi() uint32 {
	if x != nil {
		return x.Qfi
	}
	return 0
}

func (x *QerRequest) GetCir() uint64 {
	if x != nil {
		return x.Cir
	}
	return 0
}

func (x *QerRequest) GetCbs() uint64 {
	if x != nil {
		return x.Cbs
	}
	return 0
}

func (x *QerRequest) GetPir() uint64 {
	if x != nil {
		return x.Pir
	}
	return 0
}

func (x *QerRequest) GetPbs() uint64 {
	if x != nil {
		return x.Pbs
	}
	return 0
}

type SDFTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcIp   uint32 `protobuf:"varint,1,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	DstIp   uint32 `protobuf:"varint,2,opt,name=dst_ip,json=dstIp,proto3" json:"dst_ip,omitempty"`
	SrcPort uint32 `protobuf:"varint,3,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort uint32 `protobuf:"varint,4,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	Proto   uint32 `protobuf:"varint,5,opt,name=proto,proto3" json:"proto,omitempty"`
	QerId   uint32 `protobuf:"varint,6,opt,name=qer_id,json=qerId,proto3" json:"qer_id,omitempty"`
}

func (x *SDFTemplateRequest) Reset() {
	*x = SDFTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upfc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SDFTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDFTemplateRequest) ProtoMessage() {}

func (x *SDFTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upfc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDFTemplateRequest.ProtoReflect.Descriptor instead.
func (*SDFTemplateRequest) Descriptor() ([]byte, []int) {
	return file_upfc_proto_rawDescGZIP(), []int{9}
}

func (x *SDFTemplateRequest) GetSrcIp() uint32 {
	if x != nil {
		return x.SrcIp
	}
	return 0
}

func (x *SDFTemplateRequest) GetDstIp() uint32 {
	if x != nil {
		return x.DstIp
	}
	return 0
}

func (x *SDFTemplateRequest) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *SDFTemplateRequest) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

func (x *SDFTemplateRequest) GetProto() uint32 {
	if x != nil {
		return x.Proto
	}
	return 0
}

func (x *SDFTemplateRequest) GetQerId() uint32 {
	if x != nil {
		return x.QerId
	}
	return 0
}

var File_upfc_proto protoreflect.FileDescriptor

var file_upfc_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x70,
	0x66, 0x63, 0x22, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x0a, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x24,
	0x0a, 0x08, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x0d, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a,
	0x06, 0x66, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66,
	0x61, 0x72, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x50,
	0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x65, 0x69, 0x64, 0x12, 0x13, 0x0a,
	0x05, 0x75, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x65,
	0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x64, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x70, 0x64, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x71, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x71, 0x65, 0x72, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x65,
	0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x75, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x75, 0x65, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x64, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x64, 0x72, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x66, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x61, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x71, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x71, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a,
	0x0a, 0x46, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x65, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x61, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x61, 0x72, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x72, 0x63, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x72, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x64, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x22, 0x5d,
	0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x72, 0x63, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x72,
	0x63, 0x4d, 0x61, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x22, 0x7d, 0x0a,
	0x0a, 0x51, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x71,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x71, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x66, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x71, 0x66, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x63, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x62, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x62, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x62,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x62, 0x73, 0x22, 0xa5, 0x01, 0x0a,
	0x12, 0x53, 0x44, 0x46, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73,
	0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49,
	0x70, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x0a,
	0x06, 0x71, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x71,
	0x65, 0x72, 0x49, 0x64, 0x32, 0xf0, 0x03, 0x0a, 0x06, 0x55, 0x50, 0x46, 0x41, 0x70, 0x70, 0x12,
	0x32, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x12, 0x2e, 0x75, 0x70,
	0x66, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x12, 0x13, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x52, 0x70, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x55, 0x70,
	0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x64, 0x72, 0x12, 0x16, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x55,
	0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0e, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x61,
	0x72, 0x12, 0x10, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x46, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x64, 0x72, 0x12, 0x18, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x46, 0x61, 0x72, 0x12, 0x10, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x46, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x70, 0x66, 0x63,
	0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x06, 0x41,
	0x64, 0x64, 0x51, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x51, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x53, 0x44, 0x46, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x75, 0x70,
	0x66, 0x63, 0x2e, 0x53, 0x44, 0x46, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x70, 0x66, 0x63, 0x2e, 0x52, 0x70, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x40, 0x0a, 0x22, 0x6f, 0x72, 0x67, 0x2e, 0x6f,
	0x6e, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x62, 0x65, 0x73, 0x73, 0x75,
	0x70, 0x66, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x55,
	0x50, 0x46, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x05, 0x2f, 0x75,
	0x70, 0x66, 0x63, 0xa2, 0x02, 0x03, 0x48, 0x4c, 0x57, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_upfc_proto_rawDescOnce sync.Once
	file_upfc_proto_rawDescData = file_upfc_proto_rawDesc
)

func file_upfc_proto_rawDescGZIP() []byte {
	file_upfc_proto_rawDescOnce.Do(func() {
		file_upfc_proto_rawDescData = protoimpl.X.CompressGZIP(file_upfc_proto_rawDescData)
	})
	return file_upfc_proto_rawDescData
}

var file_upfc_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_upfc_proto_goTypes = []any{
	(*HelloRequest)(nil),       // 0: upfc.HelloRequest
	(*HelloReply)(nil),         // 1: upfc.HelloReply
	(*RpcReply)(nil),           // 2: upfc.RpcReply
	(*BufferRequest)(nil),      // 3: upfc.BufferRequest
	(*UplinkPdrRequest)(nil),   // 4: upfc.UplinkPdrRequest
	(*DownlinkPdrRequest)(nil), // 5: upfc.DownlinkPdrRequest
	(*FarRequest)(nil),         // 6: upfc.FarRequest
	(*RouteRequest)(nil),       // 7: upfc.RouteRequest
	(*QerRequest)(nil),         // 8: upfc.QerRequest
	(*SDFTemplateRequest)(nil), // 9: upfc.SDFTemplateRequest
}
var file_upfc_proto_depIdxs = []int32{
	0, // 0: upfc.UPFApp.SayHello:input_type -> upfc.HelloRequest
	3, // 1: upfc.UPFApp.SetBuffer:input_type -> upfc.BufferRequest
	4, // 2: upfc.UPFApp.AddUplinkPdr:input_type -> upfc.UplinkPdrRequest
	6, // 3: upfc.UPFApp.AddUplinkFar:input_type -> upfc.FarRequest
	5, // 4: upfc.UPFApp.AddDownlinkPdr:input_type -> upfc.DownlinkPdrRequest
	6, // 5: upfc.UPFApp.AddDownlinkFar:input_type -> upfc.FarRequest
	7, // 6: upfc.UPFApp.AddRoute:input_type -> upfc.RouteRequest
	8, // 7: upfc.UPFApp.AddQer:input_type -> upfc.QerRequest
	9, // 8: upfc.UPFApp.AddSDFTemplate:input_type -> upfc.SDFTemplateRequest
	1, // 9: upfc.UPFApp.SayHello:output_type -> upfc.HelloReply
	2, // 10: upfc.UPFApp.SetBuffer:output_type -> upfc.RpcReply
	2, // 11: upfc.UPFApp.AddUplinkPdr:output_type -> upfc.RpcReply
	2, // 12: upfc.UPFApp.AddUplinkFar:output_type -> upfc.RpcReply
	2, // 13: upfc.UPFApp.AddDownlinkPdr:output_type -> upfc.RpcReply
	2, // 14: upfc.UPFApp.AddDownlinkFar:output_type -> upfc.RpcReply
	2, // 15: upfc.UPFApp.AddRoute:output_type -> upfc.RpcReply
	2, // 16: upfc.UPFApp.AddQer:output_type -> upfc.RpcReply
	2, // 17: upfc.UPFApp.AddSDFTemplate:output_type -> upfc.RpcReply
	9, // [9:18] is the sub-list for method output_type
	0, // [0:9] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_upfc_proto_init() }
func file_upfc_proto_init() {
	if File_upfc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_upfc_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RpcReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BufferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UplinkPdrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DownlinkPdrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*RouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*QerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upfc_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SDFTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_upfc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_upfc_proto_goTypes,
		DependencyIndexes: file_upfc_proto_depIdxs,
		MessageInfos:      file_upfc_proto_msgTypes,
	}.Build()
	File_upfc_proto = out.File
	file_upfc_proto_rawDesc = nil
	file_upfc_proto_goTypes = nil
	file_upfc_proto_depIdxs = nil
}
